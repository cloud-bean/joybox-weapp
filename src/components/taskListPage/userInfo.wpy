<style lang="less" scoped>
.header{
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  padding: 10rpx 40rpx;
  border-bottom: 1px solid #e5e5e5;
}
.headimg{
  flex-grow: 1;
  display: flex;
  justify-content:center;
}
.message{
  flex-grow: 6
  // display: flex;
  // flex-direction: column;
  // justify-content: space-between;
}
.info{
  display: flex;
  justify-content: space-around;
  padding: 20rpx 10rpx ;
}
.name{
  font-size: 34rpx;
  margin: 20rpx 10rpx;
  text-align: center;
}
.slogan{
  font-size: 24rpx;
  color: #888888;
}
image{
  margin: auto 0;
  width: 100rpx;
  height: 100rpx;
  background-color: #eeeeee;
  border-radius:10%;
}
</style>
<template>
  <view class="">
    <view class="header">
      <view class="headimg">
        <image mode="scaleToFill" src="{{user.profileImageURL || ''}}"></image>
      </view>
      <view class="message">
        <view class="name">{{ user.displayName }}</view>
        <view class="slogan">{{ user.option.slogan }}</view>
      </view>
    </view>
    <view class="info">
      <banner1 :bannerData="goldTokenData"></banner1>
      <banner2 :bannerData="expData"></banner2>
      <banner3 :bannerData="levelData"></banner3>
    </view>
  </view>

</template>
<script>
import wepy from 'wepy'
import banner from './banner'

export const level = (experience) => {
  const levelExp = [50, 100, 200, 350, 550, 800, 1100, 1450, 1850, 2300, 2800, 3350, 3950, 4600, 5300, 6050, 6850, 7700, 8600, 9550]
  const maxlevel = levelExp.length
  for (const key in levelExp) {
    if (experience < levelExp[key]) return Number(key) + 1
  }
  return maxlevel
}
export default class userInfo extends wepy.component {
  components = {
    banner1: banner,
    banner2: banner,
    banner3: banner
  }

  props = {
    user: Object
  }
  computed = {
    goldTokenData() {
      return {
        text: '悦币',
        value: this.user.option.goldToken
      }
    },
    expData() {
      return {
        text: '经验',
        value: this.user.option.exp
      }
    },
    levelData() {
      return {
        text: '等级',
        value: level(this.user.option.exp)
      }
    }
  }
}
</script>
