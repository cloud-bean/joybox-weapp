<style lang="less" scoped>
.wrapper{

}
.user-info{
  // margin-top: 20rpx;
}
.sub-title{
  padding: 15rpx;
  color: #888;
  background-color: #efeff4;
  font-size: 28rpx;
}
</style>
<template>
  <view class="wrapper">
    <userInfo :user="user"></userInfo>
    <navbar></navbar>
    <view wx:if="tasks.length > 0">
      <repeat  for="{{tasks}}" key="index" index="index" item="item">
        <view @tap="handleTap({{item}})">
        <taskItem :taskData="item" ></taskItem>
      </view>
      </repeat>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import navbar from '../components/taskListPage/navbar'
import taskItem from '../components/taskListPage/taskItem'
import userInfo from '../components/taskListPage/userInfo'
import { connect } from 'wepy-redux'
import { fetchTasksAction, setActiveTasksAction } from '../store/actions'
@connect({
  tasks (state) {
    return state.task.tasks
  },
  user (state) {
    return state.user
  }
}, {
  fetchTasksAction,
  setActiveTask: setActiveTasksAction
})

export default class TaskListPage extends wepy.page {
  components = {
    navbar,
    taskItem,
    userInfo
  }
  config = {
    backgroundColor: '#efeff4'
  }
  data = {
    selected: false
    // tasks:
  }
  computed = {
  }
  methods = {
    handleTap(item, e) {
      this.methods.setActiveTask(item)
      wepy.navigateTo({
        url: '/pages/taskDetailPage'
      })
    }
  }
  onShow() {
    // console.log('onshow of task list page')
    this.methods.fetchTasksAction()
    // getStore().dispatch(fetchTasksAction()) // dispatch to fetch list
  }
  onReload() {
    console.log('onreload of task list page')
  }
}
</script>
