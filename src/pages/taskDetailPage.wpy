<style lang="less" scoped>
@import "../plugin/wxParse/wxParse.wxss";
.submit{
  background-color: #09BB07;
  color: white;
  position: fixed;
  // padding: 20rpx;
  width: 80%;
  // border-radius: 10rpx;
  bottom:20rpx;
  left: 0;
  right: 0;
  margin: 0 auto;
  // right:20rpx;
}
.record-box{
  position: absolute;
  top:300rpx;
  left: 0;
  right: 0;
  width: 70%;
  margin: 0 auto;
  background-color: #ffffff;
  z-index: 1000;
}
.md-container{
  padding: 10rpx 20rpx;
}
.summary{
  color: #576b95;
}
.mask{
  width: 100%;
  height: 1500rpx;
  /* Bg: */
  opacity: 0.5;
  background: #000000;
  position: absolute;
  z-index: 999;
  top: 0;
}
.task-title{
  padding: 1rem 1rem;
  font-size: 17pt;
  background-color: #26a2ff;
  opacity: 0.8;
  color: white;
}
.task-head{
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  padding: 1rem 1rem;
  // height: 5rem;
  background-color: #26a2ff;
  font-size: 14pt;
  color: white;
}
.msg-container{
  margin-bottom: 100rpx;
}
.play-audio{
  /*border: 1px solid #ccc;*/
  display:flex;
  justify-content: space-around;
}
.play-audio audio{

  margin: 0 auto;
}

.play-video{
  margin:0 auto;
}
// .play-video video{
//   height:100%;
//   width: 100%;
// }
</style>

<template>
  <import src="../plugin/wxParse/wxParse.wxml"/>
  <view class="task-title">{{activeTask.name}}</view>
  <view class="task-head">
    <!-- <view>发布 {{activeTask.created }}</view>
    <view>过期 {{activeTask.expireTime }}</view> -->
    <view>类型 {{activeTask.type}}</view>
  </view>
  <view class="wxParse md-container">

    <template is="wxParse" data="{{wxParseData:question.nodes}}"/>
    <view class="" wx:if="{{activeTask.audioFile || activeTask.videoFile}}">
      <view class="wxParse-h1">任务素材</view>
      <view class="play-video" wx:if="{{activeTask.videoFile}}" binderror="handleError">
        <video  src="{{activeTask.videoFile.URL}}" controls>  </video>
      </view>
      <view class="play-audio"  wx:if="{{activeTask.audioFile}}">
        <audio src="{{activeTask.audioFile.URL}}" binderror="handleError" controls> </audio>
      </view>
    </view>
  </view>

  <view class="wxParse md-container summary" wx:if="{{activeTask.isDone}}">
    <template is="wxParse" data="{{wxParseData:summary.nodes}}"/>
  </view>


  <view class="md-container">
    <completeList :completeUsers.sync="taskDoneUsers"></completeList>
  </view>
  <view class="msg-container">
    <repeat  for="{{taskComments}}" key="index" index="index" item="item">
      <msgItem :msgData.sync="item"></msgItem>
    </repeat>
  </view>

  <button wx:if="{{!activeTask.isDone}}" class="submit" @tap="open">上传作业</button>
</template>

<script>
import wepy from 'wepy'
import completeList from '../components/taskDetailPage/completeList'
import msgItem from '../components/taskDetailPage/msgItem'
import recordBox from '../components/taskDetailPage/recordBox'
var WxParse = require('../plugin/wxParse/wxParse.js')
import { getTaskComments } from '../store/actions'
import { connect } from 'wepy-redux'
@connect({
  activeTask (state) {
    return state.task.activeTask
  },
  taskDoneUsers(state) {
    return state.task.activeTask.taskDoneUsers
  },
  taskComments(state) {
    return state.task.activeTaskComments
  }
}, {
  getTaskComments
})
export default class TaskDetailPage extends wepy.page {
  data = {
    tempAudioFile:'',
    tempVideoFile:''
  }
  components = {
    completeList,
    msgItem,
    recordBox
  }
  onLoad() {
    const question = this.activeTask.description
    const summary = this.activeTask.summary
    WxParse.wxParse('question', 'md', question, this, 5)
    WxParse.wxParse('summary', 'md', summary, this, 5)
    this.methods.getTaskComments(this.activeTask._id)
  }
  computed = {
  }
  async onShow() {
    console.log(this.taskDoneUsers)
    const that = this
    console.log(that.activeTask.audioFile.URL);
    // try{
    //   wepy.showLoading({title:'素材下载中'})
    //   if(that.activeTask.audioFile){
    //     const {tempFilePath} = await wepy.downloadFile({url: that.activeTask.audioFile.URL})
    //     this.tempAudioFile = tempFilePath;
    //   }
    //   if(that.activeTask.videoFile){
    //     const {tempFilePath} = await wepy.downloadFile({url: that.activeTask.videoFile.URL})
    //     this.tempAudioFile = tempFilePath;
    //   }
    //   wepy.hideLoading()
    // } catch (e) {
    //   console.log(e)
    // }
  }
  methods = {
    handleSubmit() {
      console.log('handleSubmit')
    },
    handleError(e) {
      console.log(e.detail)
    },
    open () {
      let that = this
      wx.showActionSheet({
        itemList: ['拍照', '录音（暂不支持）', '视频'],
        success: function(res) {
          console.log(res.tapIndex)
          if (res.tapIndex !== undefined) {
            wx.navigateTo({
              url: `/pages/submitOrderPage?type=${res.tapIndex}&taskId=${that.activeTask._id}`
            })
          }
        },
        fail: function(res) {
          console.log(res.errMsg)
        }
      })
    },
    recordVoice () {
      wepy.startRecord({
        success: function(res) {
          var tempFilePath = res.tempFilePath
          let uploadTask = wepy.uploadFile({
            url: 'http://120.25.227.156:7000/api/base/tool/files',
            filePath: tempFilePath,
            name: 'file',
            formData: {
              'fileType': 'audio'
            },
            success: function (res) {
              var data = res.data
              console.log(data)
            }
          })
          uploadTask.onProgressUpdate((res) => {
            console.log('上传进度', res.progress)
            console.log('已经上传的数据长度', res.totalBytesSent)
            console.log('预期需要上传的数据总长度', res.totalBytesExpectedToSend)
          })
        },
        fail: function(res) {
          console.log('录音失败')
        }
      })
      setTimeout(function() {
        wepy.stopRecord()
        console.log('录音因超时停止')
      }, 10000)
    }
  }
}
</script>
