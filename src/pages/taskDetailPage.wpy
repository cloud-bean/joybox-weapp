<style lang="less" scoped>
  @import "../plugin/wxParse/wxParse.wxss";
  .submit {
    background-color: #09BB07;
    color: white;
    position: fixed; // padding: 20rpx;
    width: 80%; // border-radius: 10rpx;
    bottom: 20rpx;
    left: 0;
    right: 0;
    margin: 0 auto; // right:20rpx;
  }
  .video-play {
    background-color: black;
    color: white; // padding: 20rpx;
    width: 50%; // border-radius: 10rpx;
    bottom: -10rpx;
    left: 0;
    right: 0;
    margin: 0 auto;
  }
  .record-box {
    position: absolute;
    top: 300rpx;
    left: 0;
    right: 0;
    width: 70%;
    margin: 0 auto;
    background-color: #ffffff;
    z-index: 1000;
  }
  .md-container {
    padding: 10rpx 5rpx;
    text-align: center;
  }
  .summary {
    color: #576b95;
  }
  .mask {
    width: 100%;
    height: 100%;
    /* Bg: */
    // opacity: 0.5;
    background: rgba(0, 0, 0, .5);
    position: absolute;
    z-index: 999;
    top: 0;
  }
  .task-title {
    padding: 20rpx 20rpx;
    font-size: 14pt;
    background-color: #26a2ff;
    color: white;
  }
  .share-button {
    background-color: white;
  }
  .task-head {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 10rpx 10rpx;
    height: 100rpx;
    background-color: #26a2ff;
    font-size: 10pt;
    color: white;
    opacity: 0.6;
  }
  .msg-container {
    margin-bottom: 100rpx;
  }
  .play-audio {
    /*border: 1px solid #ccc;*/
    display: flex;
    justify-content: space-around;
  }
  .play-audio audio {
    margin: 0 auto;
  }
  .play-video {
    margin: 0 auto;
  }
  .button-group {
    display:flex;
    justify-content: space-around;
  }
  .recorder-status {
    text-align: center;
    color: #fff;
    padding: 0.5rem;
    position: fixed;
    top: 0;
    width: 100%;
    font-size: 1rem;
    background-color: #26a2ff;
    padding: .3rem 0;
    display: block;
  }
  .record-status-icon {
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-bottom: -3px;
  }
  .button {
    text-align: center;
    font-size: 1rem;
    width: 4rem;
    /*padding-top: 1rem;*/
    margin: 0 auto;
    /*border-radius: 50%;*/
    /*background-color: #ccc;*/
  }
  .button-record {
    color: red;
  }
  .button-text {
    font-size: 1rem;
    color: #555;
  }
  .cancel {
    padding: 1rem 2rem;
  }
  .disabled {
    color: #ddd;
  }
  .icon-large {
    width: 40px;
    height: 40px;
  }
  .preview {
    width: 90%;
    display: block;
    height: 20px;
  }
  .recorder {
    margin: 10px auto;
    border: 2px dashed green;
  }
  .order-div {
    margin: 10px;
    padding: 30px;
    border: 1px solid rgba(215, 215, 215, 0.53);
  }
</style>

<template>
  <view>
    <import src="../plugin/wxParse/wxParse.wxml" />
    <view class="task-title">
      {{activeTask.name}}
    </view>
    <view class="task-head">
      <view>发布于 {{activeTask.created }}</view>
      <view> {{activeTask.expireTime }}超期</view>
      <view>类型 {{activeTask.type}}</view>
    </view>
    <view wx:if="{{videoVid}}">
      <txv-video vid="{{videoVid}}" playerid="txv-task" autoplay="{{false}}">></txv-video>
    </view>
    <view class="wxParse md-container">
      <template is="wxParse" wx:if="{{activeTask.description}}" data="{{wxParseData:question.nodes}}" />
      <image mode="widthFix" src="{{activeTask.contentImage.URL}}" />
      <view class="" wx:if="{{activeTask.audioFile || activeTask.videoFile}}">
        <view class="wxParse-h1">任务素材</view>
        <view class="play-video" wx:if="{{activeTask.videoFile}}" binderror="handleError">
          <video src="{{activeTask.videoFile.URL}}" controls>  </video>
        </view>
        <view class="play-audio" wx:if="{{activeTask.audioFile}}">
          <audio src="{{activeTask.audioFile.URL}}" binderror="handleError" controls> </audio>
        </view>
      </view>
    </view>
    <view class="wxParse md-container summary" wx:if="{{activeTask.isDone}}">
      <template is="wxParse" wx:if="{{activeTask.summary}}" data="{{wxParseData:summary.nodes}}" />
    </view>
    <button open-type="share" class="share-button">
                  <image src="/assets/images/share.png" style="width: 20px; height: 20px;" /> 分享
                </button>
    <view class="md-container">
      <complete-list :completeUsers.sync="taskDoneUsers"></complete-list>
    </view>
    <!--view class="msg-container" wx-if="{{!taskOrder}}">
        <view>提交作业：</view>
        <i-avatar src="/assets/images/file-image.png" size="small" shape="square"></i-avatar>
        <i-avatar src="/assets/images/file-audio.png" size="small" shape="square"></i-avatar>
        <i-avatar src="/assets/images/file-video.png" size="small" shape="square"></i-avatar>
      </view-->
    <view class="recorder" wx:if="{{showRecordBox}}">
      <view class="recorder-status">
        <image wx:if="{{recordStatus=='录音中'}}" class="record-status-icon" src="../assets/images/record-red.png" alt="" /> {{recordStatus}}
      </view>
      <view class="preview">
        <progress percent="{{progress}}" wx:if="{{progress > 0}}" show-info></progress>
      </view>
      <view class="button-group" wx-if="{{!uploadFileURL}}">
        <view class="button button-play" wx:if="{{recordStatus=='已停止' && tempFilePath}}" @tap="playRecord">
          <image class="icon-large {{playDisabled?'disabled':''}}" style="" src="../assets/images/play.png" alt="" />
          <view class="button-text">播放</view>
        </view>
        <view class="button button-stop" wx:if="{{recordStatus=='录音中' || recordStatus == '播放中'}}" @tap="stopRecord">
          <image class="icon-large" src="../assets/images/stop.png" alt="" />
          <view class="button-text">停止</view>
        </view>
        <view class="button button-record {{recordDisabled?'disabled':''}}" wx:if="{{recordStatus=='已停止'}}" @tap="startRecord">
          <image class="icon-large" style="" src="../assets/images/voice.png" alt="" />
          <view class="button-text">开始录制</view>
        </view>
        <view wx-if="{{recordStatus=='已停止' && tempFilePath}}" class="button button-play {{uploadDisabled?'disabled':''}}" @tap="uploadVoice">
          <image class="icon-large" style="" src="../assets/images/upload.png" alt="" />
          <view class="button-text">上传</view>
        </view>
      </view>
      <view class="cancel" @tap="cancel">
        <button @tap="submitTheOrder" wx-if="{{uploadFileURL}}" type="primary" size="large" plain>提交作业</button>
        <button type="default" size="large" plain>取消</button>
      </view>
    </view>

    <i-modal title="预览作业" visible="{{ isOrderModalOpen }}" bind:ok="onCloseOrderFileOK" show-cancel="{{false}}">
      <image wx-if="{{orderFile.type == 0}}"  style="display: block; margin: 10px auto; width: 80%" mode="widthFix" src="{{orderFile.URL}}"/>
      <view  wx-if="{{orderFile.type == 1}}"  style="display: block; margin: 10px auto; width: 80%">
        <view class="button button-play" wx:if="{{!isAudioPlaying}}" @tap="playOrderAudio">
          <image class="icon-large" style="" src="../assets/images/play.png" alt="" />
          <view class="button-text">播放</view>
        </view>
        <view class="button button-stop" wx:if="{{isAudioPlaying}}" @tap="stopOrderAudio">
          <image class="icon-large" src="../assets/images/stop.png" alt="" />
          <view class="button-text">停止</view>
        </view>
      </view>
      <video wx-if="{{orderFile.type == 2}}"  style="display: block; margin: 10px auto; width: 80%" src="{{orderFile.URL}}"/>
    </i-modal>

    <view class="msg-container order-div" wx-if="{{taskOrder}}">
      <view>已提交作业(点击可预览作业)：</view>
      <repeat for="{{taskOrder.files}}" key="index" index="index" item="file">
        <i-avatar src="/assets/images/file-image.png" wx-if="{{file.type == 0}}" shape="square" @tap="showOrderFile({{file}})"></i-avatar>
        <i-avatar src="/assets/images/file-audio.png" wx-if="{{file.type == 1}}" shape="square" @tap="showOrderFile({{file}})"></i-avatar>
        <i-avatar src="/assets/images/file-video.png" wx-if="{{file.type == 2}}" shape="square" @tap="showOrderFile({{file}})"></i-avatar>
      </repeat>
    </view>
    <view class="msg-container">
      <repeat for="{{taskComments}}" key="index" index="index" item="item">
        <msg-item :msgData.sync="item"></msg-item>
      </repeat>
    </view>
    <button wx:if="{{!taskOrder}}" class="submit" @tap="open">上传作业</button>
    <button wx:if="{{taskOrder.status == 0}}" class="submit" @tap="open">重新提交作业</button>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import config from '../config'
  import completeList from '../components/taskDetailPage/completeList'
  import msgItem from '../components/taskDetailPage/msgItem'
  var WxParse = require('../plugin/wxParse/wxParse.js')
  import {
    getTaskComments,
    setActiveTasksAction,
    getTaskOrdersAction,
    submitOrder,
    setExpGoldAfterSubmitOrder
  } from '../store/actions'
  import {
    connect
  } from 'wepy-redux'
  import * as api from '../api'
  @connect({
    activeTask(state) {
      return state.task.activeTask
    },
    taskDoneUsers(state) {
      return state.task.activeTask.taskDoneUsers
    },
    taskComments(state) {
      return state.task.activeTaskComments
    },
    taskOrder(state) {
      if (state.task.activeTaskOrders && state.task.activeTaskOrders.length > 0) {
        return state.task.activeTaskOrders[0] // just fucking one order!
      } else {
        return null
      }
    },
    videoVid(state) {
      const startTag = '<iframe frameborder="0" width="100%" src="https://v.qq.com/iframe/player.html?vid='
      const endTag = '&tiny=0&auto=0" allowfullscreen></iframe>'
      const vidStr = state.task.activeTask.txVideoFrame ? state.task.activeTask.txVideoFrame.slice(startTag.length, 0 - endTag.length) : ''
      return vidStr
    }
  }, {
    getTaskComments,
    setActiveTasksAction,
    getTaskOrdersAction,
    submitOrder,
    setExpGoldAfterSubmitOrder
  })
  export default class TaskDetailPage extends wepy.page {
    data = {
      tempAudioFile: '',
      tempVideoFile: '',
      defaultImgUrl: '../assets/images/title.png',
      showRecordBox: false,
      recordStatus: '已停止',
      tempFilePath: '',
      fileTypeIndex: 0,
      uploadFileURL: '',
      progress: 0,
      taskId: '',
      playDisabled: true,
      recordDisabled: false,
      uploadDisabled: true,
      audioCtx: null,
      recorderManager: null,
      taskRewardExp: 0,
      taskRewardGold: 0,
      isOrderModalOpen: false,
      orderFile: null,
      isAudioPlaying: false
    }
    config = {
      usingComponents: {
        'txv-video': 'plugin://tencentvideo/video',
        'i-avatar': '/iview/avatar/index',
        'i-modal': '/iview/modal2/index'
      }
    }
    components = {
      'complete-list': completeList,
      'msg-item': msgItem
    }
    onShareAppMessage(res) {
      let imgUrl = this.defaultImgUrl
      if (this.activeTask.contentImage && this.activeTask.contentImage.URL) {
        imgUrl = this.activeTask.contentImage.URL
      }
      return {
        title: this.activeTask.name,
        path: `pages/taskDetailPage?from=share&taskId=${this.activeTask._id}`,
        imageUrl: imgUrl,
        success(res) {
          console.log(res)
        }
      }
    }
    onLoad(option) {
      if (option.from === 'share') {
        var that = this
        api.getTask(option.taskId).then(function(item) {
          console.log('get task with id', item)
          that.methods.setActiveTasksAction(item)
          that.methods.getTaskComments(item._id)
          that.methods.getTaskOrdersAction(item._id)
        })
      } else {
        const question = this.activeTask.description
        const summary = this.activeTask.summary
        WxParse.wxParse('question', 'md', question, this, 5)
        WxParse.wxParse('summary', 'md', summary, this, 5)
        this.methods.getTaskComments(this.activeTask._id)
        this.methods.getTaskOrdersAction(this.activeTask._id)
      }

      this.audioCtx = wx.createInnerAudioContext()
      this.recorderManager = wx.getRecorderManager()
    }
    computed = {}
    async onShow() {
      // try{
      //   wepy.showLoading({title:'素材下载中'})
      //   if(that.activeTask.audioFile){
      //     const {tempFilePath} = await wepy.downloadFile({url: that.activeTask.audioFile.URL})
      //     this.tempAudioFile = tempFilePath;
      //   }
      //   if(that.activeTask.videoFile){
      //     const {tempFilePath} = await wepy.downloadFile({url: that.activeTask.videoFile.URL})
      //     this.tempAudioFile = tempFilePath;
      //   }
      //   wepy.hideLoading()
      // } catch (e) {
      //   console.log(e)
      // }
    }
    setButtonDisabled(play, record, upload) {
      this.playDisabled = play
      this.recordDisabled = record
      this.uploadDisabled = upload
      this.$apply()
    }
    methods = {
      onCloseOrderFileOK() {
        this.orderFile = null
        this.isOrderModalOpen = false
        this.methods.stopOrderAudio()
      },
      showOrderFile (file) {
        this.orderFile = file
        this.isOrderModalOpen = true
        this.isAudioPlaying = false
      },
      playOrderAudio() {
        this.audioCtx.src = this.orderFile.URL
        this.isAudioPlaying = true
        this.audioCtx.onPlay(function() {
          console.log('开始播放')
        })
        this.audioCtx.play()
      },
      stopOrderAudio() {
        if (this.audioCtx) {
          this.audioCtx.onStop(function() {
            console.log('播放停止')
          })
          this.audioCtx.stop()
        }
        this.isAudioPlaying = false
      },
      handleSubmit() {
        console.log('handleSubmit')
      },
      handleError(e) {
        console.log(e.detail)
      },
      showToastAfterSubmit(exp, gold) {
        let title1 = `成长值+${exp}`
        let title2 = `悦币+${gold}`
        wepy.showToast({
          title: title1,
          icon: 'success',
          duration: 1000
        })
        setTimeout(function() {
          wepy.showToast({
            title: title2,
            icon: 'success',
            duration: 1000
          })
        }, 1300)
      },
      startRecord() {
        var that = this
        if (!this.recordDisabled) {
          this.recordStatus = '录音中'
          this.recorderManager.start({
            format: 'mp3' // 如果录制acc类型音频则改成aac
          })
          this.recorderManager.onStop(function(data) {
            that.tempFilePath = data.tempFilePath
            console.log('录音停止', data)
            if (that.tempFilePath) {
              wepy.showToast({
                title: '成功录音',
                icon: 'success',
                duration: 1000
              })
            }
            that.$apply()
          })
        }
      },
      stopRecord() {
        if (this.recordStatus === '录音中') {
          this.recordStatus = '已停止'
          this.setButtonDisabled(false, false, false)
          this.recorderManager.stop()
        } else if (this.recordStatus === '播放中' && this.audioCtx) {
          this.audioCtx.stop()
          this.recordStatus = '已停止'
        }
        this.$apply()
      },
      playRecord() {
        if (!this.playDisabled) {
          const that = this
          that.recordStatus = '播放中'
          that.audioCtx.src = that.tempFilePath
          that.audioCtx.onPlay(function() {
            console.log('开始播放', that.tempFilePath)
          })
          that.audioCtx.play()
        }
        this.$apply()
      },
      uploadVoice() {
        const that = this
        if (that.tempFilePath) {
          let uploadTask = wx.uploadFile({
            url: config.server.uploadServer,
            filePath: that.tempFilePath,
            name: 'file',
            formData: {
              'fileType': 'audio'
            },
            success: function(res) {
              let data = res.data
              that.progress = 100
              that.uploadFileURL = JSON.parse(data).data.URL
              console.log(' that.uploadFileURL:', that.uploadFileURL)
              that.$apply()
            }
          })
          uploadTask.onProgressUpdate((res) => {
            console.log(`提交上传中 ${res.progress}%`)
            if (res.progress < 95) {
              that.progress = res.progress
              that.$apply()
            }
          })
        }
      },
      submitTheOrder() {
        this.methods.submitOrder({
          taskId: this.taskId,
          serverId: this.uploadFileURL,
          type: this.fileTypeIndex
        })
        let that = this
        if (this.taskOrder) { // 已经提交过作业
          console.log('// 已经提交过作业')
          wepy.showToast({
            title: '更新作业成功',
            icon: 'success',
            duration: 1000
          })
          setTimeout(function() {
            that.uploadFileURL = ''
            that.progress = 0
            that.uploadText = ''
            wx.navigateTo({
              url: '/pages/successPage'
            })
          }, 1300)
        } else { // 从未提交过作业
          console.log('从未提交过作业')
          this.methods.showToastAfterSubmit(that.taskRewardExp, that.taskRewardGold)
          setTimeout(function() {
            console.log('now go to succ page')
            that.uploadFileURL = ''
            that.progress = 0
            that.uploadText = ''
            that.methods.setExpGoldAfterSubmitOrder({
              exp: that.taskRewardExp,
              gold: that.taskRewardGold
            })
            wx.navigateTo({
              url: '/pages/successPage'
            })
          }, 2300)
        }
      },
      cancel() {
        // wx.navigateBack()
        this.showRecordBox = false
      },
      open() {
        let that = this
        wx.showActionSheet({
          itemList: ['拍照', '录音', '视频'],
          success: function(res) {
            console.log(res.tapIndex)
            if (res.tapIndex === 1) {
              // wx.navigateTo({
              //   url: `/pages/recordPage?type=${res.tapIndex}&taskId=${that.activeTask._id}&exp=${that.activeTask.exp}&gold=${that.activeTask.goldToken}`
              // })
              console.log('set show record box')
              that.showRecordBox = true
              that.$apply()
              that.fileTypeIndex = 1
              that.taskId = that.activeTask._id
              that.taskRewardExp = that.activeTask.exp
              that.taskRewardGold = that.activeTask.goldToken
            } else if (res.tapIndex !== undefined) {
              wx.navigateTo({
                url: `/pages/submitOrderPage?type=${res.tapIndex}&taskId=${that.activeTask._id}&exp=${that.activeTask.exp}&gold=${that.activeTask.goldToken}&taskOrder=${that.taskOrder}`
              })
            }
          },
          fail: function(res) {
            console.log(res.errMsg)
          }
        })
      }
    }
  }
</script>
