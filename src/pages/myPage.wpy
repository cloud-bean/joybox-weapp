<style lang="less" scoped>
  .layout {
    border: 1px solid #d7dde4;
    background: #f5f7f9;
    font-size: 12pt;
  }
  .icon-small {
    width: 20px;
    height: 20px;
  }
  .divs .imgs {
    display: inline-block;
    vertical-align: middle;
  }
  .divs .infos {
    display: inline-block;
  }
</style>

<template>
  <div class="layout">
    <i-message id="message" />
    <view>
      <i-avatar src="{{user.profileImageURL || 'https://i.loli.net/2017/08/21/599a521472424.jpg'}}" size="large" shape="circle"></i-avatar>
      {{user.displayName}} - 已加入{{user.created}}
      <view class="divs">
        <div class="imgs">
          <image class="icon-small" style="" src="../assets/images/level.png" alt=""/>
        </div>
        <div class="infos" style="margin-right: 10px;">等级 {{user.level}}</div>
        <div class="imgs">
          <image class="icon-small" style="" src="../assets/images/exp.png" alt=""/>
        </div>
        <div class="infos" style="margin-right: 10px;">经验值 {{user.option.exp}}</div>
        <div class="imgs">
          <image class="icon-small" src="../assets/images/gold.png" alt=""/>
        </div>
        <div class="infos">悦币 {{goldToken}}</div>
      </view>
    </view>
    <view slot="footer">
      <!--<i-badge count="1.8" style="margin: 0 10px;">-->
      <!--<i-icon type="redpacket" size="36" color="red" />-->
      <!--</i-badge>-->
      <!--<i-badge count="2.6" style="margin: 0 10px;" i-class="demo">-->
      <!--<i-icon type="integral" size="36" color="brown" />-->
      <!--</i-badge>-->
    </view>
    <view>
      <keepBar :keepInfo="keepInfo" :speedRate="speedRate"></keepBar>
    </view>
    <!--view>
      排行: {{ rank.me }}
    </view>
    <view>
      荣耀
    </view-->
  </div>
</template>

<script>
  import wepy from 'wepy'
  import KeepBar from '../components/keepBar'
  import {
    getMyBagCards,
    getRank
  } from '../store/actions'
  import {
    connect
  } from 'wepy-redux'
  import dayjs from '../utils/dayJS'
  const level = function(experience) {
    const levelExp = [50, 100, 200, 350, 550, 800, 1100, 1450, 1850, 2300, 2800, 3350, 3950, 4600, 5300, 6050, 6850, 7700, 8600, 9550]
    const maxlevel = levelExp.length
    for (const key in levelExp) {
      if (experience < levelExp[key]) return Number(key) + 1
    }
    return maxlevel
  }
  @connect({
    user(state) {
      const newUser = { ...state.user
      }
      newUser.level = level(newUser.option.exp)
      newUser.created = dayjs(new Date(newUser.created)).toNow(true)
      return newUser
    },
    speedRate(state) {
      return '+' + (state.user.speedRate / 100).toFixed(2) + '%'
    },
    keepInfo(state) {
      return state.mine.keepInfo
    },
    myBagCards(state) {
      return state.mine.myBagCards
    },
    rank(state) {
      return state.mine.rank
    }
  }, {
    getMyBagCards,
    getRank
  })
  export default class myPage extends wepy.page {
    config = {
      usingComponents: {
        'i-card': '/iview/card/index',
        'i-tag': '/iview/tag/index',
        'i-badge': '/iview/badge/index',
        'i-icon': '/iview/icon/index',
        'i-grid': '/iview/grid/index',
        'i-grid-item': '/iview/grid-item/index',
        'i-grid-icon': '/iview/grid-icon/index',
        'i-grid-label': '/iview/grid-label/index',
        'i-avatar': '/iview/avatar/index'
      }
    }
    components = {
      keepBar: KeepBar
    }
    computed = {
      goldToken() {
        if (this.user && this.user.option && this.user.option.goldToken) {
          return parseInt(this.user.option.goldToken, 10).toFixed(2)
        } else {
          return 0
        }
      }
    }
    onReady() {
      this.methods.getMyBagCards()
      // this.methods.getRank()
    }
  }
</script>
